const WEATHER_API = 'https://api.openweathermap.org/data/2.5/weather?';
const request = require('request');
const search = require('./search');

/////////////////////////////// Th·ªùi ti·∫øt bot ////////////////////////////
////////////////////////////// b·ªüi c√¥ Tr√† gi√† ? //////////////////////////
module.exports = function (bot) {
    bot.hear(['weather', 'th·ªùi ti·∫øt'], (payload, chat) => {
        chat.conversation((convo) => {
            convo.ask("B·∫°n ·ªü ƒë√¢u th·∫ø (g·ª≠i v·ªã tr√≠ l√™n ƒë·ªÉ m√¨nh d·ª± b√°o nghen) - t·ª´ Th·∫ßy b√≥i n√≥i lu√¥n ƒëi√™u", (payload, convo) => {
                if (payload.message.attachments[0].payload.coordinates) {
                    var lat = payload.message.attachments[0].payload.coordinates.lat;
                    var long = payload.message.attachments[0].payload.coordinates.long;
                    request(WEATHER_API + "lat=" + lat + "&lon=" + long + "&APPID=781a4ff410c47f5131129f221c2dcc44", function (error, response, body) {
                        if (response.statusCode !== 200) {
                            console.log('L·ªói??? ' + response.status);
                            return;
                        } else {
                            body = JSON.parse(body);
                            var location = body.name;
                            var pressure = Math.ceil(body.main.pressure);
                            var humidity = Math.ceil(body.main.humidity);
                            var tempC = Math.ceil(body.main.temp - 273);
                            var wMain = body.weather[0].main;
                            if (tempC > 100) {
                                convo.say("Tr√°i ƒë·∫•t ti√™u r√πi");
                                convo.sendAttachment('image', 'https://media1.tenor.com/images/71b3af3541f226215a579fb96386fc35/tenor.gif?itemid=4808980');
                            } else if (tempC < -40) {
                                convo.say("K·ªâ bƒÉng h√† ?");
                            } else {
                                convo.say("Th·ªùi ti·∫øt b√¢y gi·ªù ·ªü [" + location + ", "+ body.sys.country+ "] l√† " + tempC + "oC").then(() => {
                                    convo.say("√Åp su·∫•t ƒë·∫°t m·ª©c " + pressure + "atm. ƒê·ªô ·∫©m " + humidity + "%. M·ª©c gi√≥ " + Math.ceil(body.wind.speed) + "miles/hr");
                                });
                            }
                            switch (wMain) {
                                case "Rain":
                                    convo.say("Fun fact: H·∫°t m∆∞a th∆∞·ªùng bay d∆∞·ªõi 1 g√≥c h∆∞·ªõng v√†o ng∆∞·ªùi b·∫°n. ƒê·ª´ng d·∫°i ƒë∆∞a ny ƒëi ch∆°i hnay n·∫øu kh√¥ng mu·ªën b·ªã b√≤ ƒë√°");
                                case "Thunderstorm":
                                    convo.say("Th·∫•t t√¨nh t·ª± t·ª≠ ƒëi m∆∞a. ƒêi·ªán gi·∫≠t si√™u t√™ ƒë√£ s∆∞·ªõng ch∆∞a ?");
                                    break;
                                case "Drizzle":
                                    convo.say("Nh·ªõ m·∫∑c √°o m∆∞a tr∆∞·ªõc khi v√¥ nh√† ü§≠ c√°c b·∫°n nh·ªè, nh√©"); // -_- ƒëeo, kh√¥ng ph·∫£i m·∫∑c :P
                                    break;
                                case "Clear":
                                    convo.say("Ui tr·ªùi ƒë·∫πp th·∫ø n√†y m√† kh√¥ng ·ªü nh√† th√¨ ph√≠ qu√° :p"); // neet-san?
                                    break;
                                case "Snow":
                                    convo.say("o.O ... ƒê·ª´ng ƒÉn tuy·∫øt nh√© ..."); //imnotfunnyimsosorry // noprob,auntie :/
                                    break;
                                case "Clouds":
                                    convo.say("M√¢y m∆∞a v·ª´a h·ª£p t√¨nh, v·ª´a h·ª£p l√Ω trong tr∆∞·ªùng h·ª£p n√†y :))");
                                    break;
                                default:
                                    convo.say("ƒêeo kh·∫©u trang v√† k√≠nh r√¢m m·ªçi l√∫c m·ªçi n∆°i, nh∆∞ ch·ªã n√†y n√®"); // c√≥ ai nghƒ© t·ªõi c·∫£nh c√¥ Tr√† ƒëi lead ch∆∞a ?!
                                    convo.sendAttachment('image', 'http://sohanews.sohacdn.com/thumb_w/660/2016/adcc7288d693418599dfd291cad61400-1482982069105-0-0-310-500-crop-1482982103995.jpg');
                                    break;
                            }
                            convo.end();
                        }
                    });
                } else {
                    chat.say("Kh√¥ng ph·∫£i v·ªã tr√≠ :/")
                    convo.end();
                }
            });
        });
    });
    ///////////////////////////// Khu vui ch∆°i bot /////////////////////////
    bot.hear(['ƒë·ªãa ƒëi·ªÉm vui ch∆°i', 'ƒëi ch∆°i', 'location', 'places'], (payload,chat)=> {
        chat.conversation((convo) => {
            convo.ask("B·∫°n ·ªü ƒë√¢u th·∫ø (g·ª≠i v·ªã tr√≠ l√™n ƒë·ªÉ m√¨nh t√¨m khu vui ch∆°i nghen) - t·ª´ Th·∫ßy b√≥i n√≥i lu√¥n ƒëi√™u", (payload, convo) => {
                if (payload.message.attachments[0].payload.coordinates) {
                    var lat = payload.message.attachments[0].payload.coordinates.lat;
                    var long = payload.message.attachments[0].payload.coordinates.long;
                    convo.ask({
                        text: 'B·∫°n mu·ªën l√†m g√¨ n√®?',
                        quickReplies: ['Qu·∫©yyyyy','ThƒÉm quan', 'C√† ph√™', 'Ch∆°i ngo√†i tr·ªùi', 'Xem phim']
                    }, (payload, convo) {
                        convo.set('answer', payload.message.text);
                    });
                    switch (convo.get('answer')) {
                        case 'Qu·∫©yyyyy':
                            search(lat, long, 'night_club', convo);
                            break;
                        case 'ThƒÉm quan':
                            search(lat, long, 'museum', convo);
                            break;
                        case 'C√† ph√™':
                            search(lat, long, 'cafe', convo);
                            break;
                        case 'Ch∆°i ngo√†i tr·ªùi':
                            search(lat, long, 'amusement_park', convo);
                            break;
                        case 'Xem phim':
                            search(lat, long, 'movie_theater', convo);
                            break;
                        case default:
                            convo.say("Huhhhhhhhhhhhhhhhhhh???");
                            break;
                    }
                } else {
                    chat.say("Kh√¥ng ph·∫£i v·ªã tr√≠ :/")
                    convo.end();
                }
            });
        });
    });
}
